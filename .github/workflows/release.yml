name: 'Release'
on:
  workflow_dispatch:

jobs:
  test: 
    name: 'Test'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          npm run lint
          npm run test

  deploy:
    name: 'Deploy docker'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: release-${{ github.run_number }}
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: release-${{ github.run_number }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Login
        run: |
            echo ${{secrets.OAUTH_TOKEN}} | docker login --username oauth --password-stdin cr.yandex

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        run: |
            docker build -t cr.yandex/${{secrets.REGISTRY_ID}}/shri-infra-2024:${{ github.run_number }} .
      
      - name: Uploads to the Container Registry
        run: |
            docker tag cr.yandex/${{secrets.REGISTRY_ID}}/shri-infra-2024:${{ github.run_number }} cr.yandex/${{secrets.REGISTRY_ID}}/shri-infra-2024:${{ github.run_number }}_latest
            docker push cr.yandex/${{secrets.REGISTRY_ID}}/shri-infra-2024:${{ github.run_number }}
            docker push cr.yandex/${{secrets.REGISTRY_ID}}/shri-infra-2024:${{ github.run_number }}_latest 
            
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
        with:
          tag_name: release_${{ github.run_number }}
          release_name: Release version ${{ github.run_number }}
          draft: false
          prerelease: false


  create_issue:
    name: Create issue
    needs: create_release
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Create issue
        run: |
          new_issue_url=$(gh issue create \
            --title "$TITLE" \
            --body "$BODY")
        env:
          GH_TOKEN: ${{secrets.TOKEN}}
          GH_REPO: ${{ github.repository }}
          TITLE: Release version ${{ github.run_number }}
          BODY: |
              Дата: 
              Автор: ${{ github.actor }}
              Номер версии: ${{ github.run_number }}
              Список коммитов:
              Ссылка на образ: cr.yandex/${{secrets.REGISTRY_ID}}/shri-infra-2024:${{ github.run_number }}

          PINNED: false
          CLOSE_PREVIOUS: false

  write_in_changelog:
    name: Write in changelog
    needs: create_release
    runs-on: ubuntu-latest
    steps:  
   
    - name: Download and Install git-cliff
      run: |  
        curl -L "https://github.com/orhun/git-cliff/releases/download/v2.2.1/git-cliff-2.2.1-x86_64-unknown-linux-gnu.tar.gz" -o git-cliff.tar.gz
        tar -xzf git-cliff.tar.gz  
        mv git-cliff-2.2.1/git-cliff /usr/local/bin/ 
    - name: Generate Changelog
      run: git-cliff --config cliff.toml --output CHANGELOG.md  
     
    - name: Commit Changelog
      run: |  
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add CHANGELOG.md
        git commit -m "Обновление CHANGELOG.md"
        git push https://github.com/${{ github.repository }}.git HEAD:main  